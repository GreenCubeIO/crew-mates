#!/usr/bin/env bash

VERSION=$(jq -r .version ~/.config/crew-mates/package.json)

OPTION=$1

if [[ "$OPTION" = "-v" || "$OPTION" = "--version" ]]; then
  echo $VERSION
  exit 0
fi

RUNTIME_PATH=${RUNTIME_PATH:-"/project-cargo"}

cd $RUNTIME_PATH

LOG_MESSAGE=""

log () {
  echo $LOG_MESSAGE

  if [ -f "$RUNTIME_PATH/comms.sh" ]; then
    $RUNTIME_PATH/comms.sh "$LOG_MESSAGE"
  fi
}

TRIES=0

OUTPUT_FILE=""

LOG_MESSAGE="ðŸ’¾ (v$VERSION) Packing cargo v$PROJECT_CARGO_VERSION for $PKG_NAME..."
log

LOG_MESSAGE=">>> Stage: $STAGE"
log

pack () {
  DEPLOYED_VERSION=$(hostler get $PKG_REPO_URL/$PKG_NAME/$STAGE.project-cargo.version)

  if [ "$PROJECT_CARGO_VERSION" = "$DEPLOYED_VERSION" ]; then
    LOG_MESSAGE="ðŸš¨ ERROR: Project cargo version for $PKG_NAME is the same as version deployed. Bump the project cargo version and try again."
    log
    exit 1
  fi

  LOG_MESSAGE="Packing project cargo for $PKG_NAME: v$PROJECT_CARGO_VERSION"
  log

  OUTPUT_FILE=project-cargo-$PROJECT_CARGO_VERSION.tgz

  echo $PROJECT_CARGO_VERSION > project-cargo.version &&\
  tar --exclude=$OUTPUT_FILE --exclude=$STAGE.project-cargo.version --exclude=$OUTPUT_FILE.checksum -czf $OUTPUT_FILE $(ls -d ./* ./.??* 2>/dev/null) &&\
  echo $PROJECT_CARGO_VERSION > $STAGE.project-cargo.version &&\
  md5sum $OUTPUT_FILE > $OUTPUT_FILE.checksum
}

upload () {
  if [[ "$OPTION" = "--no-upload" ]]; then
    LOG_MESSAGE=">>> Skipping upload..."
    log
  else
    LOG_MESSAGE="ðŸšš Handing to hostler for uploading: $PKG_NAME v$PKG_VERSION"
    log
    hostler put $PKG_REPO_URL/$PKG_NAME/$OUTPUT_FILE $OUTPUT_FILE &&\
    hostler put $PKG_REPO_URL/$PKG_NAME/$OUTPUT_FILE.checksum $OUTPUT_FILE.checksum &&\
    hostler put $PKG_REPO_URL/$PKG_NAME/$STAGE.project-cargo.version $STAGE.project-cargo.version
  fi
}

cleanup () {
  rm -f project-cargo.version
  rm -f project-cargo-$PROJECT_CARGO_VERSION.tgz
  rm -f $STAGE.project-cargo.version
  rm -f project-cargo-$PROJECT_CARGO_VERSION.tgz.checksum
}

attempt () {
  ((TRIES=TRIES+1))
  LOG_MESSAGE=">>> Pack attempt: $TRIES"
  log

  if [ "$TRIES" -le 3 ]; then
    { pack && upload; } || { cleanup && attempt; }
    RESULT=$?
    if [[ "$OPTION" != "--no-upload" ]]; then
      cleanup
    fi

    return $RESULT
  else
    LOG_MESSAGE="ðŸš¨ FAILED PACKING PROJECT CARGO AFTER $TRIES ATTEMPTS!"
    log
    cleanup
    return 1
  fi
}

if [[ "$OPTION" = "--cleanup" ]]; then
  LOG_MESSAGE="ðŸ§¹ (v$VERSION) Cleaning up $PKG_NAME v$PKG_VERSION..."
  log
  cleanup
  LOG_MESSAGE="Done."
  log
else
  cleanup
  attempt && LOG_MESSAGE="ðŸ“¦ Packed and uploaded project cargo after $TRIES tries" log
fi
